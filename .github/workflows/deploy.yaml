name: topas docker deploy

on:
  workflow_dispatch:
  release:
    types:
      - published

jobs:

  docker-topas:
    name: alma9 geant4.1.3 TOPAS docker
    runs-on: ubuntu-latest

    steps:
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"

      - name: Check username
        run: |
          echo ${{ vars.BOOGERT_DOCKER_USERNAME }} 

      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          Username: ${{ vars.BOOGERT_DOCKER_USERNAME }}
          password: ${{ secrets.BOOGERT_DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: sboogert/alma9-g4.11.1-topas

      - name: Build and push Docker image
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./.github/docker/alma9-g4.11.1-topas
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  apptainer-topas:
    name: alma9 geant4.1.3 TOPAS apptainer
    depends-on: docker-topas
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        dockerimage: [alma9-g4.11.1-topas]

    permissions:
      contents: read
      packages: write  # required for GHCR access

    steps:
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"

      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          # this might remove tools that are actually needed,
          # if set to "true" but frees about 6 GB
          tool-cache: false

          # all of these default to true, but feel free to set to
          # "false" if necessary for your workflow
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: true
          swap-storage: true

      - name: Flatten bdsim containers
        shell: bash
        run: |
          docker pull bdsim/alma9-apptainer 
          docker run -v ${{ github.workspace }}:/tmp bdsim/alma9-apptainer apptainer build ${{ matrix.dockerimage }}.sif docker:sboogert/${{ matrix.dockerimage }}:main
          du -sh ${{ github.workspace }}/*sif

      - name: Push to GHCR
        run: |
          echo ${{ github.actor }}
          echo ${{ github.repository_owner }}
          echo ${{ github.ref_name }}
          docker run -v ${{ github.workspace }}:/tmp bdsim/alma9-apptainer bash \
          -c "echo ${{ secrets.GITHUB_TOKEN }} | apptainer remote login -u ${{ github.actor }} --password-stdin oras://ghcr.io && \
          apptainer push /tmp/${{ matrix.dockerimage }}.sif oras://ghcr.io/${{ github.repository_owner }}/${{ matrix.dockerimage }}:${{ github.ref_name }}"